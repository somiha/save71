<%- include('header-one'),{menuId:menuId}; -%>

<div class="w-100 bg-light">
  <%- include('dashboard-topbar'),{menuId:menuId}; -%>

  <style>
    .active {
      background-color: transparent !important;
    }

    .modal {
      background: rgba(0, 0, 0, 0.5);
    }

    .modal-backdrop {
      display: none;
    }
  </style>

  <% if ( isDuePending ) { %>
  <div class="alert alert-warning">
    <strong>Warning!</strong> Please clear your pending dues before accessing the selling page.
  </div>
  <% } %>

  <div class="my-5 px-5 d-flex flex-column">
    <div style="align-self: flex-end" class="mb-3">
      <button type="button" data-bs-toggle="modal" data-bs-target="#exampleModal"
        class="border-0 rounded-3 fw-bold py-3 px-4 add-btn">
        Custom Filter
      </button>
    </div>
    <!-- Balance Section -->
    <div class="rounded linear-background text-black mb-5">
      <div
        class="d-flex justify-content-evenly align-items-center row-gap-4 text-white rounded-3 py-5 px-3 row row-cols-3"
        style="
        background: linear-gradient(90.41deg, #086bae 0.25%, #05446f 99.59%);
        overflow: hidden;
      " id="nav-tab" role="tablist">
        <div style="cursor: pointer" id="totalBalance"
          class="col text-center border-lg-end border-white d-flex flex-column justify-content-center align-items-center balance-container"
          data-bs-toggle="tab" data-bs-target="#total-balance" type="button">
          <div class="p-3 rounded balance-div">
            <p class="m-0">Total Balance</p>
            <p class="fw-bolder fs-3 m-0">
              <%= ((balance.length> 0) ? (balance[0].own_balance *
            currRate).toFixed(2) : "0") %> <%= currencyCode %>
            </p>
          </div>
        </div>

        <div style="cursor: pointer" id="dueBalance"
          class="col text-center balance-container border-lg-end border-white d-flex flex-column justify-content-center align-items-center"
          data-bs-toggle="tab" data-bs-target="#due-balance" type="button">
          <div class="p-3 balance-div rounded">
            <p class="m-0">Due Balance</p>
            <p class="fw-bolder fs-3 m-0">
              <%= ((balance.length> 0) ? (balance[0].due_payment *
            currRate).toFixed(2) : "0") %> <%= currencyCode %>
            </p>
          </div>
        </div>

        <div style="cursor: pointer" id="withdrawBalance"
          class="col text-center balance-container border-lg-end border-white d-flex flex-column justify-content-center align-items-center"
          data-bs-toggle="tab" data-bs-target="#withdraw" type="button">
          <div class="p-3 rounded balance-div">
            <p class="m-0">Withdraw</p>
            <p class="fw-bolder fs-3 m-0">
              <%= ((balance.length> 0) ? (balance[0].withdraw *
            currRate).toFixed(2) : "0") %> <%= currencyCode %>
            </p>
          </div>
        </div>

        <div class="col d-flex flex-column justify-content-center align-items-center">
          <div class="mb-2">
            <button type="button" class="border-0 rounded-5 fw-semibold py-2 fs-6 px-4 withdraw-btn"
              data-bs-toggle="modal" data-bs-target="#withDrawMoneyModal">
              Withdraw
            </button>
          </div>
          <div class="mb-2">
            <button type="button" class="border-0 rounded-5 fw-semibold py-2 fs-6 px-4 add-btn" data-bs-toggle="modal"
              data-bs-target="#addMoneyModal">
              Add Balance
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- tab content part -->
    <div class="tab-content w-100" id="nav-tabContent">
      <!-- Total Balance -->
      <div class="tab-pane fade rounded-3" id="total-balance" role="tabpanel" tabindex="0">
        <nav class="mb-4 w-100 py-5 py-lg-0 overflow-x-auto">
          <div class="d-flex gap-2 fs-6 products-tab" id="nav-tab" role="tablist">
            <a class="nav-link active btn p-2 px-3" id="nav-description-tab" data-bs-toggle="tab"
              data-bs-target="#order" type="button" aria-controls="order" aria-selected="true">
              Order
            </a>
            <a class="nav-link btn p-2 px-3" id="nav-reviews-tab" data-bs-toggle="tab" data-bs-target="#reference"
              type="button" aria-controls="reference" aria-selected="false">
              Reference
            </a>
            <!-- <a class="nav-link btn p-2 px-3" id="nav-questions-tab" data-bs-toggle="tab" data-bs-target="#sent_money" type="button" aria-controls="sent_money" aria-selected="false">
              Sent Money
            </a> -->
          </div>
        </nav>

        <!-- Total Balance content -->
        <div class="tab-content w-100" id="nav-tabContent-total-balance">
          <div class="tab-pane fade show active rounded-3" id="order" role="tabpanel" tabindex="0">
            <!-- Order table content goes here -->
          </div>
          <div class="tab-pane fade rounded-3" id="reference" role="tabpanel" tabindex="0">
            <!-- Reference table content goes here -->
          </div>
          <!-- <div class="tab-pane fade rounded-3" id="sent_money" role="tabpanel" tabindex="0">
            Sent Money table content goes here
          </div> -->
        </div>
      </div>

      <!-- Withdraw -->
      <div class="tab-pane fade rounded-3" id="withdraw" role="tabpanel" tabindex="2">
        <nav class="mb-4 w-100 py-5 py-lg-0 overflow-x-auto">
          <div class="d-flex gap-2 fs-6 products-tab" id="nav-tab-withdraw" role="tablist">
            <a class="nav-link active btn p-2 px-3" id="nav-withdraw-tab" data-bs-toggle="tab"
              data-bs-target="#wd-money" type="button">
              Withdraw
            </a>
            <a class="nav-link btn p-2 px-3" id="nav-addMoney-tab" data-bs-toggle="tab" data-bs-target="#add-money"
              type="button">
              Add Money
            </a>
          </div>
        </nav>

        <!-- Withdraw content -->
        <div class="tab-content w-100" id="nav-tabContent-withdraw">
          <!-- Withdraw Money -->
          <div class="tab-pane fade show active rounded-3" id="wd-money" tabindex="2" role="tabpanel"
            aria-labelledby="nav-withdraw-tab">
            <!-- Withdraw Money table content goes here -->
          </div>
          <!-- Add Money -->
          <div class="tab-pane fade rounded-3" id="add-money" tabindex="2" role="tabpanel"
            aria-labelledby="nav-addMoney-tab">
            <!-- Add Money table content goes here -->
          </div>
        </div>
      </div>
    </div>

    <!-- Payment History Section -->

    <div id="duePaymentWarning" class="alert alert-danger d-flex align-items-center justify-content-between"
      style="display: block; visibility: hidden">
      <div>
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        Pay due for sales !
      </div>
    </div>

    <div id="changes">
      <!--  <div class="transaction-hisotory-section py-3">
      <div class="d-flex justify-content-between">
        <h5 class="fw-bold text-black">Payment History</h5>
        <select class="btn"> Filter
          <option>All</option>
          <option>Own Income</option>
          <option>Reference Income</option>
        </select>
      </div>

      <% for (var i=0; i < history.length; i++) { %>
        <div class="d-flex justify-content-between my-3 border-bottom">
          <div>
            <a href="/order_details/<%= history[i].order_id  %>">
              <p class="color2 fs-5"> +
                <%= (history[i].amount * currRate).toFixed(2) %> <%= currencyCode %>
                <% if (history[i].type == 2) { %>
                  <span class="badge rounded-pill text-bg-success">Reference</span>
                <% } %>
              </p>
            </a>
            <p class="color3 ">
              <%= (history[i].date).toISOString().substr(0,10) %>
            </p>
          </div>
          <div>
            <i class="fa-solid fa-chevron-right"></i>
          </div>
        </div>
        <% } %>
    </div> -->

      <!-- Transcation History Section -->
      <!-- <div class="transaction-hisotory-section py-3">
      <div class="d-flex justify-content-between">
        <h5 class="fw-bold text-black">Transaction History</h5>
      </div>

      <% // for (var i=0; i < trans.length; i++) { %>
        <div class="d-flex justify-content-between align-items-center py-3 border-bottom">
          <div>
            <p class="color2 fs-5">
              <%= // (trans[i].is_withdraw ? "-" : "+" ) %>
                <%= // (trans[i].amount * currRate).toFixed(2) %> <%= currencyCode %>
            </p>
            <p class="color3 ">
              <%= // (trans[i].date).toISOString().substr(0,10) %>
            </p>
          </div>
          <div>
            <i class="fa-solid fa-chevron-right"></i>
          </div>
        </div>
        <% // } %>
    </div> -->
    </div>
    <div>
      <div id="changes"></div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>

    <!-- Balance -->
    <script>
      (function () {
        function onTotalBalanceClick() {
          const changesDiv = $('#changes');
          changesDiv.empty();

          $.ajax({
            url: '/getTableInfo',
            method: 'POST',
            dataType: 'json',
            data: {},
          })
            .done((response) => {
              if (
                response &&
                response.orderTable &&
                response.refTable &&
                response.sentMoneyTable
              ) {
                // Hide all tables by default
                $('#order, #reference, #sent_money').addClass('d-none');

                createAndAppendTable(
                  response.orderTable,
                  ['Order ID', 'Delivery Date', 'Amount (<%= currencyCode %>)'],
                  'order',
                  response.currRate,
                  1
                );
                createAndAppendTable(
                  response.refTable,
                  ['Phone Number', 'Ref Date', 'Ref Amount'],
                  'reference',
                  response.currRate,
                  2
                );
                // createAndAppendTable(response.sentMoneyTable, ['Sent Phone Number', 'Sent Date', 'Sent Amount'], 'sent_money', response.currRate, 3);
              } else {
                showError('Invalid response data.');
              }
            })
            .fail((error) =>
              showError('Error fetching data: ' + error.responseText)
            );
        }

        function showError(message) {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
          });
        }

        function createAndAppendTable(data, headers, id, currRate, tableNo) {
          const tableDiv = $('#' + id);
          const table = $('<table>').addClass(
            'table table-bordered table-striped'
          );
          const tableHead = $('<thead>').appendTo(table);
          const tableHeadRow = $('<tr>').appendTo(tableHead);

          headers.forEach((header) => {
            const headerCell = $('<th>').text(header);
            headerCell.addClass('fw-light');
            tableHeadRow.append(headerCell);
          });

          const tableBody = $('<tbody>').appendTo(table);

          data.forEach((item) => {
            const row = $('<tr>');
            const idCell = $('<td>').text(
              tableNo == 1 ? item.order_id : item.phone
            );
            const dateCell = $('<td>').text(
              formatDate(item.delivery_date || item.date || item.date)
            );
            const priceCell = $('<td>').text((item.amount * currRate).toFixed(2));
            row.append(idCell, dateCell, priceCell);
            tableBody.append(row);
          });

          // Show the table for the current tab
          tableDiv.empty().append(table).removeClass('d-none');
        }

        function formatDate(dateString) {
          const date = new Date(dateString);
          return date.toLocaleDateString();
        }

        $(document).ready(function () {
          $('#totalBalance').on('click', onTotalBalanceClick);
        });
      })();
    </script>

    <!-- Due Balance -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css" />
    <link rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1@5.3.0-alpha1@font/bootstrap-icons.css" />

    <script>
      (function () {
        function onTotalBalanceClickDue() {
          const changesDiv = $('#changes');
          changesDiv.empty();

          $.ajax({
            url: '/getTableInfoDue',
            method: 'POST',
            dataType: 'json',
            data: {}
          })
            .done(response => {
              if (response) {
                changesDiv.append('<h5><b>Due Balance</b></h5>');
                const headers1 = ['Due Transaction ID', 'Order ID', 'Last Due Date', 'Sales (<%= currencyCode %>)', 'Charge (<%= currencyCode %>)', 'Status', 'Action'];
                const table1 = createTable(response.dueTable, headers1, response.currRate, response.totalSales);
                console.log("s", response.totalSales);
                changesDiv.append(table1);
              } else {
                showError('Invalid response data.');
              }
            })
            .fail(error => showError('Error fetching data: ' + error.responseText));
        }

        function showError(message) {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
          });
        }

        function createTable(data, headers, currRate, totalSales) {
          // console.log(data);
          const table = $('<table>').addClass(
            'table table-bordered table-striped'
          );
          const tableHead = $('<thead>').appendTo(table);
          const tableHeadRow = $('<tr>').appendTo(tableHead);

          headers.forEach((header) => {
            const headerCell = $('<th>').text(header);
            headerCell.addClass('fw-light');
            tableHeadRow.append(headerCell);
          });

          const tableBody = $('<tbody>').appendTo(table);

          data.forEach(item => {

            const row = $('<tr>');
            const idCell = $('<td>').text(item.due_id)
            const orderIdCell = $('<td>').append(`<a class="btn" href="/order_details/${item.order_id}">${item.order_id}</a>`);
            const dateCell = $('<td>').text(formatDate(item.last_date));
            const salesValue = totalSales[item.order_id] || 0;
            const saleCell = $('<td>').text((salesValue * currRate).toFixed(2));
            const priceCell = $('<td>').text((item.due_amount * currRate).toFixed(2));
            const statusCell = $('<td>');
            const payCell = $('<td>');
            if (item.is_paid) {
              statusCell.append('<p class="btn btn-primary"><i class="bi bi-check-circle-fill me-2 text-white"></i>Paid</p>');
              payCell.append(`<p>Completed</p>`)
            } else {
              payCell.append(`<a class="btn btn-primary" href="/payDue/${item.due_id}/1">Pay Now</a>`)
              statusCell.append('<p class="btn btn-danger"><i class="bi bi-exclamation-circle me-2 text-white"></i>Pending</p>');
            }
            row.append(idCell, orderIdCell, dateCell, saleCell, priceCell, statusCell, payCell);
            tableBody.append(row);
          });


          return table;
        }

        function formatDate(dateString) {
          const date = new Date(dateString);
          return date.toLocaleDateString();
        }

        $(document).ready(function () {
          $('#dueBalance').on('click', onTotalBalanceClickDue);
        });
      })();
    </script>

    <!-- Withdraw -->
    <script>
      (function () {
        function onTotalBalanceClickWithdraw() {
          const changesDiv = $('#changes');
          changesDiv.empty();

          $.ajax({
            url: '/getTableInfoWithdraw',
            method: 'POST',
            dataType: 'json',
            data: {},
          })
            .done((response) => {
              if (response && response.withdrawTable && response.addMoneyTable) {
                // Hide all tables by default
                $('#wd-money, #add-money').addClass('d-none');

                createAndAppendTable(
                  response.withdrawTable,
                  [
                    'Transaction ID',
                    'Date',
                    'Withdraw Amount',
                    'Transaction Charge',
                    'Receive Amount',
                    'Payment Method',
                    'Status',
                  ],
                  'wd-money',
                  response.currRate
                );
                createAndAppendTable(
                  response.addMoneyTable,
                  [
                    'Transaction ID',
                    'Date',
                    'Add Amount',
                    'Payment Method',
                    'Status',
                  ],
                  'add-money',
                  response.currRate
                );
              } else {
                showError('Invalid response data.');
              }
            })
            .fail((error) =>
              showError('Error fetching data: ' + error.responseText)
            );
        }

        function showError(message) {
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
          });
        }

        function createAndAppendTable(data, headers, id, currRate) {
          const tableDiv = $('#' + id);
          tableDiv.empty(); // Clear the existing content
          const table = $('<table>').addClass(
            'table table-bordered table-striped'
          );
          const tableHead = $('<thead>').appendTo(table);
          const tableHeadRow = $('<tr>').appendTo(tableHead);

          headers.forEach((header) => {
            const headerCell = $('<th>').text(header);
            headerCell.addClass('fw-light');
            tableHeadRow.append(headerCell);
          });

          const tableBody = $('<tbody>').appendTo(table);

          data.forEach((item) => {
            const row = $('<tr>');
            const idCell = $('<td>').text(item.transaction_id);
            const dateCell = $('<td>').text(formatDate(item.date));
            const paymentMethodCell = $('<td>').text(item.payment_method);
            var priceCell, statusCell, vatCell, receive_amount;
            const statusName = [
              '⚠️ Pending',
              '♻️ Processing',
              '✅ Paid',
              '❌ Rejected',
              '',
              '',
            ];
            if (item.is_withdraw) {
              priceCell = $('<td class="text-danger">').text(
                (item.amount * currRate).toFixed(2)
              );
              vatCell = $('<td class="">').text(
                '-' + (((item.amount * item.tax_rate) / 100) * currRate).toFixed(2)
              );

              receive_amount = $('<td class="">').text(((item.amount - (item.amount * item.tax_rate) / 100) * currRate).toFixed(2));
              statusCell = $('<td>').text(statusName[item.status]);
            } else {
              priceCell = $('<td class="text-success">').text(
                (item.amount * currRate).toFixed(2)
              );
              statusCell = $('<td>').text(statusName[item.status]);
            }
            row.append(idCell, dateCell, priceCell, vatCell, receive_amount, paymentMethodCell);
            // if (item.is_withdraw) {
            row.append(statusCell);
            // }
            tableBody.append(row);
          });

          tableDiv.append(table); // Append the table to the tab div
          tableDiv.removeClass('d-none'); // Show the tab content
        }

        function formatDate(dateString) {
          const date = new Date(dateString);
          return date.toLocaleDateString();
        }

        $(document).ready(function () {
          $('#withdrawBalance').on('click', onTotalBalanceClickWithdraw);
        });
      })();
    </script>

    <!-- Validity check automatically -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <!-- Include SweetAlert library -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.min.js"></script>

    <!-- Add money modal -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModal" aria-hidden="true"
      data-backdrop="false">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="addMoneyModal">Add Balance</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form action="/addMoney" method="POST">
            <div class="modal-body">
              <p>Amount to Add Money:</p>
              <input type="number" class="form-control" step="0.01" name="amount" min="" required />
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                Close
              </button>
              <button type="submit" class="btn btn-primary">Add Money</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- With Draw money -->
    <div class="modal fade" id="withDrawMoneyModal" tabindex="-1" aria-labelledby="withDrawMoneyModal"
      aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="withDrawMoneyModal">
              Withdraw Money
            </h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <form action="/withDraw" method="POST">
            <div class="modal-body">
              <p>Amount to Withdraw (<%= currencyCode %>):</p>
              <% var minAmount = Math.floor(minWithDraw * currRate) %> <% var
            taxRate = Math.floor(tax) || 0 %> <% console.log("Amount: ",
            minAmount) %>
              <input type="number" class="form-control" name="amount" min="<%= minAmount %>"
                data-tax-rate="<%= taxRate %>" required />
              <small class="text-muted">
                <span name="taxDeduct" id="taxDeduct" class="text-danger tax-amount"></span>
                <%= currencyCode %> For
                <span class="text-danger"><%= taxRate %>% </span> Transaction
                Charge</small>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                Close
              </button>
              <button type="submit" class="btn btn-primary">WithDraw</button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <script>
      $(document).ready(function () {
        $('.nav-link').click(function () {
          var target = $(this).data('bs-target');
          $('.table-div').hide();
          $(target).show();
        });
      });

      $(document).ready(function () {
        $('input[name="amount"]').on('keyup', function () {
          var amount = $(this).val() || 0;
          var taxRate = parseInt($(this).data('tax-rate')) || 0;
          var taxAmount = (amount * taxRate * -1) / 100;
          $('#taxDeduct').text(`${taxAmount}`);
        });
      });
    </script>
    <%- include('footer-one'); -%>
  </div>

</div>